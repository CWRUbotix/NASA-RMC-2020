<?xml version="1.0"?>
<robot name="glennobi" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <xacro:include filename="$(find glennobi_description)/urdf/glennobi.gazebo.xacro"/>
    <xacro:include filename="$(find glennobi_description)/urdf/glennobi.transmission.xacro"/>


    <!-- NOTE Length=x, Width=y, Height=z-->

    <!-- Values for the robot body-->

    <!-- Units in Meters-->
    <xacro:property name="bodylength" value="0.4577"/>
    <xacro:property name="bodywidth" value="0.9411"/>
    <xacro:property name="bodyheight" value="0.477"/>
    <xacro:property name="wheelradius" value="0.1561"/>
    <xacro:property name="wheelwidth" value="0.0762"/>
    <!-- Distance from the centers of the wheels in the length and width of robot. -->
    <!-- wheelsepx distance from spoke to spoke over 2 -->
    <xacro:property name="wheelsepx" value="${0.3947/2}"/>
    <!-- wheelsepy is from wheel to wheel not crossing the center line-->
    <xacro:property name="wheelsepy" value="0.3175"/>
    <!-- If wheels are not aligned use offset-->
    <xacro:property name="wheeloffsetx" value="0.0"/>

    <!-- body is for aligning the robot mesh to the center of gravity-->
    <!-- Data from cad model 
    X = -2.54667
	Y = 0.68615
	Z = 9.90497
    Note not currently used but leaving here because might be useful later-->
    <xacro:property name="bodyx" value="0.13"/>
    <xacro:property name="bodyy" value="0.01"/>
    <xacro:property name="bodyz" value="0.12"/>

    <!-- Controls tilt of robot model-->
    <xacro:property name="bodyroll" value="0"/>
    <xacro:property name="bodypitch" value="0"/>
    <xacro:property name="bodyyaw" value="${pi/2}"/>


    <!-- Note line up robot model first or you will spend time realigning the other sensors-->

    <!-- Values for RealSense-->

    <!-- Values for overall dimensions of RealSense-->
    <xacro:property name="reallength" value="0.0758"/>
    <xacro:property name="realwidth" value="0.025"/>
    <xacro:property name="realheight" value="0.0151"/>

    <!-- Values from center of Body to the RealSense-->
    <xacro:property name="realx" value="${0.35+bodyx}"/>
    <xacro:property name="realy" value="${0.152+bodyy}"/>
    <xacro:property name="realz" value="${-0.01+bodyz}"/>

    <!-- Controls tilt of RealSense model-->
    <xacro:property name="realroll" value="${-(20.42 + 90) * pi/180}"/>
    <xacro:property name="realpitch" value="0"/>
    <xacro:property name="realyaw" value="${-pi/2}"/>

    <!-- Inertia Section-->

    <!-- Cadders Inertia Offset-->
    <xacro:property name="robotlengthfromzero" value="-0.282549"/>
    <xacro:property name="robotwidthfromzero" value="0.85221"/>
    <xacro:property name="robotheightfromzero" value="-9.8254"/>

    <!-- Masses unit kg-->
    
    <xacro:property name="wheelmass" value="1.05216"/>
    <!-- Mass of robot without wheels-->
    <xacro:property name="robotmass" value="30.8"/>

    <!-- Inertial values for robot units kg/m^2-->
    <xacro:property name="robotlxx" value="0.385"/>
    <xacro:property name="robotlxy" value="0"/>
    <xacro:property name="robotlxz" value="0"/>
    <xacro:property name="robotlyy" value="1.92098166"/>
    <xacro:property name="robotlyz" value="0"/>
    <xacro:property name="robotlzz" value="1.844169"/>

    <!-- Inertial values for wheels units kg/m^2-->
    <xacro:property name="wheellxx" value="${1/12*wheelmass*(3*wheelradius*wheelradius+wheelwidth*wheelwidth)}"/>
    <xacro:property name="wheellxy" value="0.0"/>
    <xacro:property name="wheellxz" value="0"/>
    <xacro:property name="wheellyy" value="${1/2*wheelmass*wheelradius*wheelradius}"/>
    <xacro:property name="wheellyz" value="0.0"/>
    <xacro:property name="wheellzz" value="${wheellxx}"/>

    <xacro:macro name="default_inertial" params="mass">
        <inertial>
          <mass value="${mass}"/>
          <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="wheel" params="prefix side reflect">
        <link name="${prefix}_wheel_link">
            <visual>
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheelradius}" length="${wheelwidth}"/>
                </geometry>
            </visual>
            <collision>
                <!-- cylinder origin different than mesh origin -->
                <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
                <geometry>
                    <cylinder radius="${wheelradius}" length="${wheelwidth}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="${wheelmass}"/>
                <inertia ixx="${wheellxx}" ixy="${wheellxy}" ixz="${wheellxz}" iyy="${wheellyy}" iyz="${wheellyz}" izz="${wheellzz}" />
            </inertial>
        </link>
        
        <!-- set gazebo wheel properties -->
        <xacro:wheel_gazebo prefix="${prefix}"/>

        <joint name="${prefix}_wheel_joint" type="continuous">
            <parent link="base_link"/>
            <child link="${prefix}_wheel_link"/>
            <origin xyz="${side*wheelsepx + wheeloffsetx} ${reflect*(wheelsepy/2 + wheelwidth/2)} 0"/>
            <axis xyz="0 1 0"/>
            <dynamics damping="0.8" friction="2.0"/>
        </joint>
        
        <!-- set wheel transmission properties -->
        <xacro:wheel_transmission prefix="${prefix}"/>
        
    </xacro:macro>

    <link name="base_link">
        <visual>
            <origin xyz="${bodyx} ${bodyy} ${bodyz}" rpy="${bodyroll} ${bodypitch} ${bodyyaw}"/>
            <geometry>
                    <mesh filename="package://glennobi_description/meshes/chassis.dae"/>
            </geometry>
        </visual>
        <collision>
            <origin xyz="${bodyx} ${bodyy} ${bodyz}" rpy="${bodyroll} ${bodypitch} ${bodyyaw}"/>
            <geometry>
                <mesh filename="package://glennobi_description/meshes/chassis.dae"/>
                <!-- <box size="${bodylength} ${bodywidth} ${bodyheight}"/> -->
            </geometry>
        </collision>
        <inertial>
            <mass value="${robotmass}"/>
            <inertia ixx="${robotlxx}" ixy="${robotlxy}" ixz="${robotlxz}" iyy="${robotlyy}" iyz="${robotlyz}" izz="${robotlzz}" />
        </inertial>
    </link>

    <xacro:wheel prefix="front_right" side="1" reflect="-1"/>
    <xacro:wheel prefix="front_left" side="1" reflect="1"/>
    <xacro:wheel prefix="back_right" side="-1" reflect="-1"/>
    <xacro:wheel prefix="back_left" side="-1" reflect="1"/>

    <link name="realsense_link">
        <visual>
            <geometry>
                <box size="${reallength} ${realwidth} ${realheight}"/>
            </geometry>
        </visual>
    </link>

    <joint name="realsense_joint" type="fixed">
        <parent link="base_link"/>
        <child link="realsense_link"/>
        <!-- transform from base_link with additional 20 degree tilt down -->
        <origin xyz="${realx} ${realy} ${realz}" rpy="${realroll} ${realpitch} ${realyaw}"/>
    </joint>

    <!-- Waiting on this location from CAD people-->

    <link name="imu_link"/>
    <joint name="imu_joint" type="fixed">
        <parent link="base_link"/>
        <child link="imu_link"/>
        <origin xyz="0.35 -0.1 0" rpy="0 0 0"/>
    </joint>

</robot>
